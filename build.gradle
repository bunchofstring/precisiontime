// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}







// A resolvable configuration to collect test reports data
configurations {
    testReportData {
        canBeResolved = true
        canBeConsumed = false
        attributes {
            attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category, Category.DOCUMENTATION))
            attribute(DocsType.DOCS_TYPE_ATTRIBUTE, objects.named(DocsType, 'test-report-data'))
        }
    }
}

dependencies {
    testReportData project('app')
    //testReportData project('apptest')
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    //mustRunAfter subprojects.collect { it.tasks.withType(Test) }
    //reportOn subprojects*.test
    testResultDirs.from(configurations.testReportData)
    //reportOn subprojects.collect { it.tasks.withType(Test) }
}

allprojects {
    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
            events = ["passed", "skipped", "failed"]
        }
        reports {
            html.enabled = false
            junitXml.outputPerTestCase = true
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task testAll(dependsOn: ['app:testDebugUnitTest', 'app:connectedDebugAndroidTest', 'app:uninstallDebug', 'apptest:connectedDebugAndroidTest']) {
    group = 'orchestration'
    description = "Run all tests"
}

gradle.projectsEvaluated {
    project(":apptest") {
        connectedDebugAndroidTest.dependsOn project(":app").installDebug
    }
}

gradle.projectsEvaluated {
    project(":app") {
        installDebug.mustRunAfter project(":app").connectedDebugAndroidTest
    }
}
